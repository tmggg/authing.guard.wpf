<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attach="clr-namespace:Authing.Guard.WPF.Infrastructures.Attach">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Authing.Guard.WPF;component/Styles/ToggleButtonStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Authing.Guard.WPF;component/Styles/DefaultValues.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Authing.Guard.WPF;component/Styles/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ComboBoxItemBaseStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlMinHeight}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxMouseOverColor}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ComboBoxMouseSelectColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="ComboBox">
        <Border x:Name="OutBorder"
                CornerRadius="{Binding Path=(attach:BorderAttach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                BorderThickness="{StaticResource OutBorderThickness}"
                BorderBrush="{StaticResource AppTextBoxNormalGrayBrush}"
                Background="{StaticResource AppTextBoxNormalGrayBrush}">
            <Border x:Name="InBorder"
                    CornerRadius="{Binding Path=(attach:BorderAttach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                    Background="Transparent"
                    BorderThickness="{StaticResource InBorderThickness}"
                    BorderBrush="Transparent">
                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="30" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           PlacementTarget="{Binding ElementName=toggleButton}"
                           AllowsTransparency="true" Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                           Margin="1"
                           PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                           Placement="Bottom">
                        <Decorator>
                            <Border
                                Margin=" 0 5 0 0"
                                Background="White"
                                BorderThickness="{StaticResource OutBorderThickness}"
                                BorderBrush="{DynamicResource AppBlueBorderBrush}"
                                CornerRadius="{Binding Path=(attach:BorderAttach.CornerRadius),RelativeSource={RelativeSource TemplatedParent}}"
                                x:Name="dropDownBorder" MinWidth="{Binding ActualWidth, ElementName=toggleButton}"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <ScrollViewer Margin="0,5" Padding="0">
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Border>
                        </Decorator>
                    </Popup>
                    <ToggleButton
                        Grid.Column="0"
                        x:Name="toggleButton"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        Grid.ColumnSpan="2"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{StaticResource ComboBoxToggleButton}" />
                    <Border Grid.Column="0" Margin="1,0">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            x:Name="contentPresenter"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="False"></Condition>
                    <Condition Property="IsMouseOver" Value="True"></Condition>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" To="{StaticResource AppTextBoxCoverGray}" Duration="0:0:0.3" />
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" To="{StaticResource AppTextBoxCoverGray}" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"  To="{StaticResource AppTextBoxNormalGray}" Duration="0:0:0.3" />
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"  To="{StaticResource AppTextBoxNormalGray}" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"  To="{StaticResource AppBlueBorder}" Duration="0:0:0.3" />
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"  To="White" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"  To="{StaticResource AppTextBoxNormalGray}" Duration="0:0:0.3" />
                            <ColorAnimation Storyboard.TargetName="OutBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"  To="{StaticResource AppTextBoxNormalGray}" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocused" Value="True" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)"  To="{StaticResource AppTextBoxInnerBorderBlue}" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="InBorder" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)" To="Transparent" Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemBaseStyle}" />
        <Setter Property="attach:BorderAttach.CornerRadius" Value="{StaticResource DefaultCornerRadius}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="MinHeight" Value="{StaticResource DefaultControlMinHeight}"></Setter>
        <Setter Property="MinWidth" Value="{StaticResource DefaultControlMinWidth}"></Setter>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="{StaticResource DefaultControlPadding}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    </Style>
</ResourceDictionary>