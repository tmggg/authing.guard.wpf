<UserControl x:Class="Authing.Guard.WPF.Views.LoginView.ResetPasswordView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Authing.Guard.WPF.Views.LoginView" xmlns:controls="clr-namespace:Authing.Guard.WPF.Controls"
             xmlns:ins="clr-namespace:Authing.Guard.WPF.Infrastructures"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Authing.Guard.WPF;component/Styles/Colors.xaml"/>
                <ResourceDictionary Source="/Authing.Guard.WPF;component/Styles/TextBoxStyles.xaml"/>
                <ResourceDictionary Source="/Authing.Guard.WPF;component/Styles/IconStyles.xaml"/>
                <ResourceDictionary Source="/Authing.Guard.WPF;component/Styles/ButtonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="PlaceHolderStyle" TargetType="controls:PlaceHolderTextBox">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="PlaceHolderFontSize" Value="12"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="PlacelHolderHorizontalAlignment" Value="Stretch"/>
                <Setter Property="Background" Value="{StaticResource AppTextBoxNormalGrayBrush}"/>
                <Setter Property="PlaceHolderForeground" Value="{StaticResource TextBoxPlaceHolderGrayBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:PlaceHolderTextBox">
                            <Grid>
                                <Border x:Name="outBd" CornerRadius="{TemplateBinding CornerRadius}">
                                    <Grid Background="Transparent">
                                        <Border x:Name="bd" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"></Border>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <controls:Icon Margin="5 0 5 0" ImageHeight="15" ImageWidth="10" Fill="{StaticResource AppIconGrayBrush}" Type="{TemplateBinding IconType}"/>
                                            <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost" BorderThickness="0" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                                            <TextBlock Grid.Column="1" Text="{TemplateBinding PlaceHolder}" HorizontalAlignment="{TemplateBinding PlacelHolderHorizontalAlignment}" VerticalAlignment="{TemplateBinding PlaceHolderVerticalAlignment}"
                                   FontSize="{TemplateBinding PlaceHolderFontSize}" Foreground="{TemplateBinding PlaceHolderForeground}" Margin="{TemplateBinding Padding}" x:Name="tbPlaceHolder"
                                   Visibility="Collapsed"/>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Text" Value="{x:Null}">
                                    <Setter Property="Visibility" TargetName="tbPlaceHolder" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Visibility" TargetName="tbPlaceHolder" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="bd" Value="{StaticResource AppTextBoxCoverGrayBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Warn" Value="False"/>
                                    <Setter TargetName="bd" Property="BorderBrush" Value="{StaticResource AppTextBoxNormalGrayBrush}"/>
                                </Trigger>
                                <Trigger Property="Warn" Value="True">
                                    <Setter Property="Background" TargetName="bd" Value="{StaticResource AppTextBoxFocusWhiteBrush}"/>
                                    <Setter Property="BorderThickness" TargetName="bd" Value="1"/>
                                    <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource AppRedBrush}"/>
                                    <Setter Property="BorderThickness" TargetName="outBd" Value="0"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" TargetName="bd" Value="{StaticResource AppTextBoxFocusWhiteBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="bd" Value="1"/>
                                        <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource AppTextBoxCoverGrayBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="outBd" Value="{StaticResource AppBlueBorderBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="outBd" Value="2"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" TargetName="bd" Value="{StaticResource AppTextBoxFocusWhiteBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="bd" Value="1"/>
                                        <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource AppTextBoxInnerBorderBlueBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="outBd" Value="{StaticResource AppBlueBorderBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="outBd" Value="2"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PasswordToggleButtonStyle" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Background="Transparent">
                                <controls:Icon x:Name="open" Type="OpenEye" Visibility="Collapsed" Foreground="{StaticResource EyeIconNorGrayBrush}" ImageHeight="15" ImageWidth="15"/>
                                <controls:Icon x:Name="close" Type="CloseEye" Visibility="Visible" Foreground="{StaticResource EyeIconNorGrayBrush}" ImageHeight="15" ImageWidth="15"/>
                                <ContentPresenter/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="open" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="close" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="open" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="close" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="open" Property="Foreground" Value="{StaticResource EyeIconOverBlackBrush}"/>
                                    <Setter TargetName="close" Property="Foreground" Value="{StaticResource EyeIconOverBlackBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="open" Property="Foreground" Value="{StaticResource EyeIconNorGrayBrush}"/>
                                    <Setter TargetName="close" Property="Foreground" Value="{StaticResource EyeIconNorGrayBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--PassWordBox样式-->
            <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
            <Style x:Key="PasswordBoxStyle1" TargetType="{x:Type PasswordBox}">
                <Setter Property="ins:PasswordBoxHelper.Attach" Value="True"/>
                <Setter Property="PasswordChar" Value="*"/>
                <Setter Property="Background" Value="{StaticResource AppTextBoxNormalGrayBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="outBd" CornerRadius="4" >
                                <Border x:Name="border" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                    <!--重写构造PasswordBox-->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <controls:Icon Type="Password" Margin="5 0" ImageHeight="14" Foreground="{StaticResource AppIconGrayBrush}" ImageWidth="14"/>
                                        <Grid x:Name="PART_InnerGrid" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <!--PasswordBox原有的显示节点-->
                                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" VerticalAlignment="Center" Background="{x:Null}" VerticalContentAlignment="Center" Margin="5,5"/>
                                            <!--创建明文显示的TextBox-->
                                            <TextBox x:Name="PART_PasswordShower" Background="Transparent"  BorderBrush="Transparent" VerticalContentAlignment="Center" Text="{Binding Path=(ins:PasswordBoxHelper.Password),RelativeSource={RelativeSource TemplatedParent}}" BorderThickness="0" Visibility="Collapsed" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,5"/>
                                            <!--创建提示字符-->
                                            <TextBlock x:Name="PART_PlaceHolder" Text="{Binding Path=(ins:ControlAttachProperty.PlaceHolder),RelativeSource={RelativeSource TemplatedParent}}"  Visibility="Collapsed" Opacity="0.6" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,5"/>
                                            <!--触发按钮显示样式-->
                                            <ToggleButton Style="{StaticResource PasswordToggleButtonStyle}" x:Name="PART_ToggleEye" Grid.Column="1" Width="40"  Margin="3,3" BorderThickness="0" >

                                            </ToggleButton>
                                        </Grid>
                                    </Grid>

                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ins:PasswordBoxHelper.Warn" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource AppRedBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                </Trigger>
                                <!--密码框为空设置按钮禁用-->
                                <Trigger Property="ins:PasswordBoxHelper.Password"  Value="">
                                    <Setter TargetName="PART_ToggleEye" Property="IsEnabled" Value="False"/>
                                </Trigger>
                                <!--按住按钮，更改按钮背景图片并设置明文框显示且密码框不显示且不占用-->
                                <Trigger Property="IsChecked" SourceName="PART_ToggleEye" Value="False">
                                    <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="PART_PasswordShower" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" SourceName="PART_ToggleEye" Value="True">
                                    <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="PART_PasswordShower" Property="Visibility" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="ins:PasswordBoxHelper.Warn" Value="False"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AppTextBoxNormalGrayBrush}"/>
                                </Trigger>
                                <!--密码框为空不且没有获取焦点时，设置提示文字显示-->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ins:PasswordBoxHelper.Password"  Value=""/>
                                        <Condition Property="IsFocused" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="PART_PlaceHolder" Property="Visibility" Value="Visible"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource AppTextBoxFocusWhiteBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource AppTextBoxCoverGrayBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="outBd" Value="{StaticResource AppBlueBorderBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="outBd" Value="2"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsFocused" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter Property="Background" TargetName="border" Value="{StaticResource AppTextBoxFocusWhiteBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource AppTextBoxInnerBorderBlueBrush}"/>
                                        <Setter Property="BorderBrush" TargetName="outBd" Value="{StaticResource AppBlueBorderBrush}"/>
                                        <Setter Property="BorderThickness" TargetName="outBd" Value="2"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <StackPanel HorizontalAlignment="Center" Margin="10">
            <controls:PlaceHolderTextBox Style="{StaticResource PlaceHolderStyle}" TextChanged="tbAccount_TextChanged"  PlaceHolder="请输入邮箱 / 手机号" MaxLength="11" x:Name="tbAccount" IconType="Account" Height="40" Width="280" CornerRadius="5">
                <controls:PlaceHolderTextBox.Resources>
                    <Storyboard x:Key="ShakeStoryboard" >
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" RepeatBehavior="5x">
                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </controls:PlaceHolderTextBox.Resources>
                <controls:PlaceHolderTextBox.RenderTransform>
                    <TranslateTransform X="0" Y="0" />
                </controls:PlaceHolderTextBox.RenderTransform>
            </controls:PlaceHolderTextBox>
            <TextBlock Text="手机号 / 邮箱未填写" Foreground="{StaticResource AppRedBrush}" Margin="0 2 0 0" x:Name="tbAccountRemind" Visibility="Collapsed"></TextBlock>
        </StackPanel>
        <StackPanel HorizontalAlignment="Center" Grid.Row="1"  Margin="10">
            <StackPanel  Orientation="Horizontal" >
                <controls:PasswordHolderTextBox TextChanged="tbCode_TextChanged"  Style="{StaticResource PlaceHolderStyle}" x:Name="tbCode" IconType="VerifyCode" PlaceHolder="请输入 4 位验证码" Height="40" Width="210"  CornerRadius="5" >
                    <controls:PlaceHolderTextBox.Resources>
                        <Storyboard x:Key="ShakeStoryboard" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" RepeatBehavior="5x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </controls:PlaceHolderTextBox.Resources>
                    <controls:PlaceHolderTextBox.RenderTransform>
                        <TranslateTransform X="0" Y="0" />
                    </controls:PlaceHolderTextBox.RenderTransform>
                </controls:PasswordHolderTextBox>
                <controls:PrimaryButton x:Name="btnSendCode" Background="White" Height="40" Width="70" BorderThickness="1" BorderBrush="Gray" Foreground="Black" Content="发送验证码" Click="btnSendCode_Click"></controls:PrimaryButton>
            </StackPanel>
            <TextBlock Text="验证码未填写" Foreground="{StaticResource AppRedBrush}" Margin="0 2 0 0" x:Name="tbCodeRemind" Visibility="Collapsed"></TextBlock>
        </StackPanel>
        <Grid Grid.Row="2" HorizontalAlignment="Center">
            <StackPanel >
                <PasswordBox Style="{StaticResource PasswordBoxStyle1}" PasswordChanged="tbPassword_PasswordChanged" ins:PasswordBoxHelper.Warn="False" FontSize="15" x:Name="tbPassword" Grid.Row="1" ins:ControlAttachProperty.PlaceHolder="请输入新密码" Height="40" Width="280"  Margin="10">
                    <PasswordBox.Resources>
                        <Storyboard x:Key="ShakeStoryboard" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.(TranslateTransform.X)" RepeatBehavior="5x">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="-2"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </PasswordBox.Resources>
                    <PasswordBox.RenderTransform>
                        <TranslateTransform X="0" Y="0" />
                    </PasswordBox.RenderTransform>
                </PasswordBox>
                <TextBlock x:Name="tbPasswordRemind" HorizontalAlignment="Left" Text="密码未填写" Visibility="Collapsed" Margin="10 2 0 0" Width="100"  Foreground="{StaticResource AppRedBrush}" ></TextBlock>
            </StackPanel>
        </Grid>
        <controls:PrimaryButton x:Name="btnConfirm" Grid.Row="3" Height="30" Width="280"  Content="确认" Click="btnConfirm_Click"></controls:PrimaryButton>

    </Grid>
</UserControl>
